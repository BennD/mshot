name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build (${{ matrix.os }}|${{ matrix.rust }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
    env:
      RUST_BACKTRACE: full
      RUSTV: ${{ matrix.rust }}
    steps:
    - uses: actions/checkout@v3
    - name: Install protoc
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup ubuntu deps
      if: matrix.os == 'ubuntu-latest'
      uses: daaku/gh-action-apt-install@v4
      with:
        packages: libdbus-1-dev
    - name: Install Rust ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.2.1
      with:
        shared-key: ${{ runner.os }}-${{ matrix.rust }}
    - name: Build
      run: cargo build --all --verbose --release
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ runner.os }}
        path: target/*/mshot_*
