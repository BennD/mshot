name: Rust

on: [ push ]

env:
  CARGO_INCREMENTAL: 1
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: git
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      # Checkout
      - uses: actions/checkout@v3

      # Setup runner
      - uses: ./.github/actions/tools
        with:
          github-token: ${{ secrets.github_token }}
          create-cache: 'true'
          os: ${{ matrix.os }}

      # Build
      - run: cargo build --all --verbose --release

      # Upload artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          if-no-files-found: error
          path: |
            target/*/mshot_*
            !**/*.d


  # Test job
  test:
    name: Test (${{ matrix.os }})
    needs: build
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      # Checkout
      - uses: actions/checkout@v3

      # Setup runner
      - uses: ./.github/actions/tools
        with:
          github-token: ${{ secrets.github_token }}
          os: ${{ matrix.os }}

      # Test
      - run: cargo test --all --verbose --release


  # Clippy job
  clippy:
    name: Clippy
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Checkout
      - uses: actions/checkout@v3

      # Setup runner
      - uses: ./.github/actions/tools
        with:
          github-token: ${{ secrets.github_token }}

      # Clippy
      - run: cargo clippy --all --verbose --release


  # Fmt job
  check_fmt:
    name: Check Formatting
    runs-on: ubuntu-latest
    needs: build # This is required to ensure that the cache is populated

    steps:
      # Checkout
      - uses: actions/checkout@v3

      # Setup runner
      - uses: ./.github/actions/tools
        with:
          github-token: ${{ secrets.github_token }}

      # Check formatting
      - run: cargo fmt --check